{"version":3,"sources":["components/Filter.js","services/Phonebook.js","components/Name.js","components/Numbers.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Filter","props","value","onChange","baseUrl","Phonebook","createPerson","newPerson","axios","post","then","response","data","getAll","get","update","id","put","deletePerson","delete","Name","person","newPersons","setPersons","setNewMessage","name","number","onClick","window","confirm","filter","p","setTimeout","Numbers","newFilter","removePerson","notification","toUpperCase","includes","map","filteredperson","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","App","useState","newName","setNewName","newNumber","setNewNumber","setNewFilter","newMessage","newError","setErrorMessage","useEffect","init","event","target","onSubmit","preventDefault","personObject","find","updatedPerson","catch","error","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc833e29.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) =>{\n    return(\n      <div>\n        filter shown with <input value={props.value} onChange={props.onChange}/>\n      </div>\n    )\n  }\nexport default Filter","import axios from \"axios\";\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return(request.then(response => response.data))\n}\n\nconst createPerson = newPerson =>{\n    const request = axios.post(baseUrl,newPerson)\n    return(request.then(response => response.data))\n}\n\nconst update = (id,newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`,newPerson)\n    return(request.then(response => response.data))\n}\n\nconst deletePerson = (id) =>{\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nconst Phonebook ={\n    createPerson,\n    getAll,\n    update,\n    deletePerson,\n}\n\nexport default Phonebook","import React from 'react'\nimport Phonebook from '../services/Phonebook'\n\nconst Name = ({person,newPersons,setPersons,setNewMessage}) =>{\n\n  const handleDelete = () =>{\n      if(window.confirm(`Delete ${person.name}?`)){\n        Phonebook.deletePerson(person.id)\n        setPersons(newPersons.filter(p => person.id !== p.id))\n        setNewMessage(`Deleted ${person.name}`)\n          // \"Added\"-notification timeout\n          setTimeout( () => {\n            setNewMessage(null)\n          },3000)\n      }\n    }\n\n    return(\n        <div>\n          {person.name} {person.number} <button onClick={handleDelete}>delete</button>\n        </div>\n      )\n    }\n\nexport default Name","import React from 'react'\nimport Name from './Name'\nconst Numbers = ({newPersons,newFilter,removePerson,notification}) =>{\n    return(\n        <div>\n            {(newPersons.filter(person => person.name.toUpperCase().includes(newFilter.toUpperCase()))).map(filteredperson =>  <Name person={filteredperson} key={filteredperson.name} newPersons={newPersons} setPersons={removePerson} setNewMessage={notification}/>)}\n        </div>\n    )\n}\n\nexport default Numbers","import React from 'react'\n\nconst Notification = ({message}) =>{\n\n    const addedNotification = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n      }\n\n    if(message != null){\n        return(\n            <div style={addedNotification}>{message}</div>\n        )\n    }\n    return null\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorNotification = ({message}) =>{\n    const errorNotification = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n      }\n\n    if(message != null){\n        return(\n            <div style={errorNotification}>{message}</div>\n        )\n    }\n    return null\n}\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Numbers from './components/Numbers'\nimport Phonebook from './services/Phonebook'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [ newPersons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ newMessage, setNewMessage] = useState(null)\n  const [ newError, setErrorMessage] = useState(null)\n\n  //gets phonebook data from the json-server\n  useEffect(()=>{\n    Phonebook.getAll()\n    .then(init =>{setPersons(init)})\n  },[])\n\n  const addName = (event) =>{\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const names = newPersons.map(person => person.name)\n    /*Logic for adding new number to the phonebook\n    if persons name is not on the list*/\n    if(!(names.find(name => name === personObject.name))){\n      //\"Add\" button mechanics is here\n      Phonebook.createPerson(personObject)\n      setPersons(newPersons.concat(personObject))\n      setNewName('')\n      setNewNumber('')\n      setNewMessage(`Added ${personObject.name}`)\n      // \"Added\"-notification timeout\n      setTimeout( () => {\n        setNewMessage(null)\n      },3000)\n      //updates local phonebook that every object has id placed by backend\n      Phonebook.getAll().then(init =>{setPersons(init)})\n    }else{ //Logic for updateing number\n      if(window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)){\n        //finds the id from that person that we are trying to add again\n        const id = newPersons.find(p => p.name === personObject.name).id\n        Phonebook.update(id,personObject).then(updatedPerson => {\n          setNewName('')\n          setNewNumber('')\n          setNewMessage(`Replaced ${personObject.name}'s number`)\n          // \"Replace\"-notification timeout\n          setTimeout( () => {\n            setNewMessage(null)\n          },3000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${personObject.name} has already been removed from server`)\n          // \"Error\"-notification timeout\n          setTimeout( () => {\n            setErrorMessage(null)\n          },3000)\n        })\n        \n        //updates local phonebook that every object on  frontend has id placed by backend\n        Phonebook.getAll().then(init =>{setPersons(init)})\n      }\n    }\n  }\n\n  //handlers for input fields and Filter component\n  const handleNewNameChange = (event) =>{\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) =>{\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) =>{\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={newMessage}></Notification>\n        <ErrorNotification message={newError}></ErrorNotification>\n        <Filter value={newFilter} onChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNewNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n        {/*badly designed and broken part of the App. Have to pass every state twice \n        (from the App component to the Number component and then to the Name component)\n         to reach number deletation logic. Stupid but works*/}\n        <Numbers newPersons={newPersons} newFilter={newFilter} removePerson={setPersons} notification={setNewMessage}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}